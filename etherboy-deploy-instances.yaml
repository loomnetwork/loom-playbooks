---
- name: Create instance(s)
  hosts: localhost
  connection: local
  gather_facts: no
  tags: provisioning

  vars:

  tasks:
  - name: AWS -- Create key pair
    local_action:
      module: ec2_key
      name: "{{ aws_keypair_name }}"
      region: "{{ aws_region }}"

  - name: AWS -- Create security group
    local_action:
      module: ec2_group
      name: etherboy_sg
      description: Security group for etherboy instances
      vpc_id: "{{ aws_vpc_id }}"
      region: "{{ aws_region }}"
      rules:
        - proto: tcp
          ports:
            - 46656-46658
            - 9999
          cidr_ip: "{{ aws_vpc_subnet }}"
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 9100
          to_port: 9100
          cidr_ip: "{{ aws_vpc_subnet }}"
        - proto: icmp
          from_port: 8
          to_port:  -1
          cidr_ip: 0.0.0.0/0

  - name: AWS -- Launch etherboy instances
    local_action:
      module: ec2
      id: "{{ hostvars[item]['ansible_hostname'] }}"
      key_name: "{{ aws_keypair_name }}"
      group: etherboy_sg
      instance_type: "{{ aws_instance_type }}"
      image: "{{ aws_ami_id }}"
      instance_initiated_shutdown_behavior: "terminate"
      wait: yes
      wait_timeout: 500
      instance_profile_name: "{{ aws_instance_profile }}"
      instance_tags:
          Name: "{{ hostvars[item]['ansible_hostname'] }}"
      region: "{{ aws_region }}"
      vpc_subnet_id: "{{ aws_subnet }}"
      assign_public_ip: yes
      monitoring: yes
      user_data: "{{ aws_user_data }}"
      volumes:
        - device_name: /dev/sda1
          volume_type: gp2
          volume_size: "{{ disk_size }}"
          delete_on_termination: true
      state: present
    with_items: "{{ groups['etherboy'] }}"
    register: ec2

#  - name: Create internal Load Balancer for loom blockchain rpc
#    local_action:
#      module: ec2_elb_lb
#      name: "test-vpc"
#      scheme: internal
#      state: present
#      instance_ids:
#        - i-abcd1234
#      purge_instance_ids: true
#      subnets:
#        - subnet-abcd1234
#        - subnet-1a2b3c4d
#      listeners:
#        - protocol: http # options are http, https, ssl, tcp
#          load_balancer_port: 80
#          instance_port: 80

  - name: Add new instance to host group
    add_host:
      hostname: "{{ item.instances[0].public_ip }}"
      groupname: launched
    with_items: "{{ ec2.results }}"

  - name: Add new instance to internal host group
    add_host:
      hostname: "{{ item.instances[0].private_ip }}"
      groupname: launched-int
    with_items: "{{ ec2.results }}"

  - name: Wait for Etherboy to come up
    wait_for:
      host: "{{ item.instances[0].private_ip }}"
      port: 9999
      delay: 60
      timeout: 320
      state: started
    with_items: "{{ ec2.results }}"

- name: Local
  hosts: localhost
  connection: local
  gather_facts: no

  tasks:
  - name: Retrieve the etherboycli binary
    command: curl -sL -o /tmp/etherboycli-{{ etherboy_build }} https://private.delegatecall.com/etherboy/linux/{{ etherboy_build }}/etherboycli creates=/tmp/etherboycli-{{ etherboy_build }}

  - name: Retrieve the etherboy out of process plugin
    command: curl -sL -o /tmp/etherboycore.0.0.1-{{ etherboy_build }} https://private.delegatecall.com/etherboy/linux/{{ etherboy_build }}/etherboycore.0.0.1 creates=/tmp/etherboycore.0.0.1-{{ etherboy_build }}

  - name: Retrieve the loom binary
    command: curl -sL -o /tmp/loom-{{ loom_build }} https://private.delegatecall.com/loom/linux/{{ loom_build }}/loom creates=/tmp/loom-{{ loom_build }}

- name: Manage etherboy instances
  hosts: launched
  become: yes
  gather_facts: yes
  connection: ssh
  roles:
    - { role: etherboy, tags: ['etherboy'], working_directory: /home/ubuntu }
    - role: node_exporter

- hosts: Schedule shutdown
  gather_facts: no
  tasks:
    - name: shutdown
      command: /sbin/shutdown -h "{{ life_timeout }}"
      sudo: yes